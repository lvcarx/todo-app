{"version":3,"sources":["components/modals/SettingsModal.jsx","components/Header.jsx","components/Footer.jsx","components/TodoItemWrapper.jsx","components/Content.jsx","pages/todo.jsx","pages/login.jsx","pages/register.jsx","App.js","serviceWorker.js","index.js"],"names":["SettingsModal","props","changeColorSettings","bind","changeDarkModeSettings","state","darkMode","color","setting","token","localStorage","getItem","this","axios","post","then","grandchildFetchSettings","catch","err","console","log","finally","e","className","opened","id","onClick","closeModal2","src","React","Component","Header","openModal","showModal","setState","fetchSettings","closeModal","Footer","target","href","TodoItemWrapper","deleteTodoItem","favoriteTodoItem","handleTodoItem","doneTodoItem","localDoneTodoItem","openTodoItem","createSection","fetchSection","onChangeSection","openSectionDialog","closeSectionDialog","chooseSection","deleteSection","changeSectionInItem","closeCategoryDialog","notesInDB","noteAuthor","author","sectionName","sectionDialogOpen","currentSection","categoryModalOpen","document","getElementById","classList","toggle","todo","todoItem","done","fetchTodoItems","favorite","value","section","fetchSections","resp","sections","todoId","category","map","type","onChange","placeholder","allNotes","note","_id","name","filter","Content","createTodoItem","changeTodoItemText","currentNote","currentTodo","sectionsInDB","userID","userEmail","nextState","nextProps","sendToken","res","data","NotePage","email","LoginPage","onChangeEmail","onChangePassword","tryLogin","password","loggedIn","preventDefault","user","setItem","RegisterPage","App","userIsAuthenticated","defaults","headers","common","exact","path","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1d768a34.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nclass SettingsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.changeColorSettings = this.changeColorSettings.bind(this)\r\n        this.changeDarkModeSettings = this.changeDarkModeSettings.bind(this)\r\n        this.state = {\r\n            darkMode: this.props.darkMode,\r\n            color: this.props.color\r\n        }\r\n    }\r\n\r\n    changeDarkModeSettings() {\r\n        const token = localStorage.getItem('user-token')\r\n        const setting = {\r\n            token: token,\r\n            darkMode: !this.props.darkMode\r\n        }\r\n        axios.post('http://localhost:8000/api/settings/update', setting)\r\n            .then(this.props.grandchildFetchSettings())\r\n            .catch(err => console.log(err)) \r\n            .finally();\r\n    }\r\n\r\n    changeColorSettings(e) {\r\n        const token = localStorage.getItem('user-token')\r\n        const setting = {\r\n            token: token,\r\n            color: e\r\n        }\r\n        axios.post('http://localhost:8000/api/settings/update', setting)\r\n            .then(this.props.grandchildFetchSettings())\r\n            .catch(err => console.log(err)) \r\n            .finally()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.opened === true ? 'modal open' : 'modal'} id=\"settingsModal\">\r\n                <a id=\"close\" onClick={this.props.closeModal2} className=\"close\"><img src=\"/img/close.svg\"></img></a>\r\n                <h2>Settings</h2>\r\n                <div className=\"\">\r\n                    <h3>Appearance</h3>\r\n                    <a className={this.props.darkMode == true ? 'true' : 'false'} id=\"darkModeToggle\" onClick={this.changeDarkModeSettings}>Dark Mode</a>\r\n                    <h4>Colors</h4>\r\n                    <div className={this.props.color}>\r\n                        <a className=\"color blue\" id=\"blueMode\" onClick={() => this.changeColorSettings('blue')}></a>\r\n                        <a className=\"color green\" id=\"greenMode\" onClick={() => this.changeColorSettings('green')}></a>\r\n                        <a className=\"color pink\" id=\"pinkMode\" onClick={() => this.changeColorSettings('pink')}></a>\r\n                    </div>\r\n\r\n                    <h3>Reset App (Developer)</h3>        \r\n                    <a>Delete all data</a>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SettingsModal","import axios from 'axios'\r\nimport React from 'react'\r\nimport SettingsModal from '../components/modals/SettingsModal.jsx'\r\n\r\nclass Header extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.openModal = this.openModal.bind(this)\r\n        //this.fetchSettings = this.fetchSettings.bind(this)\r\n        this.state = {\r\n            showModal: false,\r\n            darkMode: false,\r\n            color: ''\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSettings();\r\n    }\r\n\r\n    /*fetchSettings() {\r\n        const token = localStorage.getItem('user-token')\r\n        const sendToken = {\r\n            token: token\r\n        }\r\n        axios.post('http://localhost:8000/api/settings/fetch', sendToken)\r\n            .then((resp) => {\r\n                this.setState({\r\n                    darkMode: resp.data.darkMode,\r\n                    color: resp.data.color\r\n                });\r\n            })\r\n    }*/\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <img className=\"logo\" src=\"/img/logo.svg\"></img>\r\n                <img className=\"settingsIcon\" src=\"/img/settings.svg\" onClick={this.openModal}></img>\r\n                <SettingsModal grandchildFetchSettings={this.props.fetchSettings} closeModal2={() => this.closeModal()} opened = {this.state.showModal} darkMode={this.props.darkMode} color={this.props.color} />\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nclass Footer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <a target=\"_blank\" href=\"https://github.com/reallucareichmann/todo-app\" className=\"\">Changelog and future plans</a>\r\n                <br></br>\r\n                <a target=\"_blank\" href=\"https://luca-reichmann.de/impressum\">Impressum</a>\r\n                <br></br>\r\n                <a target=\"_blank\" href=\"https://luca-reichmann.de\" className=\"madeWithLove\">Made with ❤️ by luca-reichmann.de</a>\r\n            </footer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nclass TodoItemWrapper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.deleteTodoItem = this.deleteTodoItem.bind(this)\r\n        this.favoriteTodoItem = this.favoriteTodoItem.bind(this)\r\n        this.handleTodoItem = this.handleTodoItem.bind(this)\r\n        this.doneTodoItem = this.doneTodoItem.bind(this)\r\n        this.localDoneTodoItem = this.localDoneTodoItem.bind(this)\r\n        this.openTodoItem = this.openTodoItem.bind(this)\r\n        this.createSection = this.createSection.bind(this)\r\n        this.fetchSection = this.fetchSection.bind(this)\r\n        this.onChangeSection = this.onChangeSection.bind(this)\r\n        this.openSectionDialog = this.openSectionDialog.bind(this)\r\n        this.closeSectionDialog = this.closeSectionDialog.bind(this)\r\n        this.chooseSection = this.chooseSection.bind(this)\r\n        this.deleteSection = this.deleteSection.bind(this)\r\n        this.changeSectionInItem = this.changeSectionInItem.bind(this)\r\n        this.closeCategoryDialog = this.closeCategoryDialog.bind(this)\r\n\r\n        this.state = {\r\n            notesInDB: [],\r\n            noteAuthor: this.props.author,\r\n            sectionName: '',\r\n            sectionDialogOpen: false,\r\n            currentSection: 'all',\r\n            categoryModalOpen: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSection();\r\n    }\r\n\r\n    openTodoItem(e) {\r\n        const item = document.getElementById(e);\r\n        item.classList.toggle('opened')\r\n    }\r\n\r\n    localDoneTodoItem(e) {\r\n        const item = document.getElementById(e);\r\n        item.classList.toggle('done')\r\n    }\r\n\r\n    doneTodoItem(e) {\r\n        const todo = {\r\n            author: this.props.author,\r\n            todoItem: e,\r\n            done: !e.done\r\n        }\r\n        axios.post('http://localhost:8000/api/todo/update', todo)\r\n            .then(this.props.fetchTodoItems())\r\n            .catch(err => console.log(err)) \r\n            .finally()\r\n    }\r\n\r\n    favoriteTodoItem(e) {\r\n        const todo = {\r\n            author: this.props.author,\r\n            todoItem: e,\r\n            favorite: !e.favorite\r\n        }\r\n        axios.post('http://localhost:8000/api/todo/update', todo)\r\n            .then(this.props.fetchTodoItems())\r\n            .catch(err => console.log(err)) \r\n            .finally()\r\n    }\r\n\r\n    handleTodoItem() {\r\n        this.setState({\r\n            categoryModalOpen: true\r\n       });\r\n    }\r\n\r\n    deleteTodoItem(e) {\r\n        const todo = {\r\n            author: this.props.author,\r\n            todoItem: e\r\n        }\r\n        console.log(todo);\r\n        axios.post('http://localhost:8000/api/todo/delete', todo)\r\n            .then(this.props.fetchTodoItems())\r\n            .catch(err => console.log(err)) \r\n            .finally()\r\n    }\r\n\r\n    onChangeSection(e) {\r\n        this.setState({\r\n            sectionName: e.target.value\r\n       });\r\n    }\r\n\r\n    createSection(e) {\r\n        const token = localStorage.getItem('user-token')\r\n        const section = {\r\n            token: token,\r\n            sectionName: this.state.sectionName\r\n        }\r\n        axios.post('http://localhost:8000/api/sections/create', section)\r\n            .then(this.props.fetchSections())\r\n            .catch(err => console.log(err)) \r\n        this.setState({\r\n            sectionName: ''\r\n        })\r\n    }\r\n\r\n    fetchSection() {\r\n        const token = localStorage.getItem('user-token')\r\n        const section = {\r\n            token: token\r\n        }\r\n        axios.post('http://localhost:8000/api/sections/fetch', section)\r\n            .then((resp) => {\r\n                console.log(resp);\r\n            })\r\n    }\r\n\r\n    openSectionDialog() {\r\n        this.setState({\r\n            sectionDialogOpen: true\r\n        })\r\n    }\r\n\r\n    closeSectionDialog() {\r\n        this.setState({\r\n            sectionDialogOpen: false\r\n        })\r\n    }\r\n\r\n    closeCategoryDialog() {\r\n        this.setState({\r\n            categoryModalOpen: false\r\n        })\r\n    }\r\n\r\n    chooseSection(e) {\r\n        this.setState({\r\n            currentSection: e\r\n        })\r\n    }\r\n\r\n    deleteSection(e) {\r\n        const token = localStorage.getItem('user-token')\r\n        const section = {\r\n            token: token,\r\n            sections: e\r\n        }\r\n        console.log(section);\r\n        axios.post('http://localhost:8000/api/sections/delete', section)\r\n            .then(this.props.fetchSections())\r\n            .catch(err => console.log(err)) \r\n    }\r\n\r\n    changeSectionInItem(todoId, section) {\r\n        const todo = {\r\n            todoItem: todoId,\r\n            author: this.props.author,\r\n            category: section\r\n        }\r\n        console.log(todo);\r\n        axios.post('http://localhost:8000/api/todo/update', todo)\r\n            .then(this.props.fetchTodoItems())\r\n            .catch(err => console.log(err)) \r\n            .finally()\r\n    }\r\n\r\n    render() {\r\n        if (this.state.currentSection == 'all') {\r\n            return (\r\n                <div className=\"todoItemWrapper\">\r\n                    <h2>Today</h2>\r\n                    <div className=\"sections\">\r\n                    <div className='sectionWrapper'>\r\n                            <span className=\"section\" onClick={() => this.chooseSection('all')}>All</span>\r\n                    </div>\r\n                        {this.props.sections.map(section =>          \r\n                                <div className={this.state.currentSection == section ? 'sectionWrapper current' : 'sectionWrapper'}>\r\n                                    <span className=\"section\" onClick={() => this.chooseSection(section)}>{section}</span>\r\n                                    <a><img onClick={() => this.deleteSection(section)} className=\"close\" src=\"/img/deleteCategory.svg\"></img></a>\r\n                                </div>\r\n                        )}\r\n                    </div>\r\n                    <a id=\"addSections\" onClick={this.openSectionDialog}>Add new sections</a>\r\n                    <div id=\"dynamicSection\" className={this.state.sectionDialogOpen == true ? 'dynamicSection open' : 'dynamicSection'}>\r\n                        <input id=\"sectionName\" type=\"text\" onChange={this.onChangeSection} placeholder=\"Add a new task category...\"></input>\r\n                        <a onClick={() => {\r\n                            this.createSection()\r\n                            this.closeSectionDialog()\r\n                        }}>Save and close</a>\r\n                    </div>\r\n                    {this.props.allNotes.map(note =>\r\n                        <div className={note.favorite == true ? 'todoItem favorite' : 'todoItem'} id={note._id}>\r\n                            <div className=\"wrapper\">\r\n                                <a className=\"done\" onClick={() => {\r\n                                    this.doneTodoItem(note)\r\n                                    this.localDoneTodoItem(note._id)\r\n                                    }}></a>\r\n                                <p className=\"todoItemContent\">{note.name}</p>\r\n                                <a className=\"edit\" onClick={() => this.openTodoItem(note._id)}>Edit</a>\r\n                            </div>\r\n                            <div className=\"actionArea\">\r\n                                <a className=\"favorite\" onClick={() => this.favoriteTodoItem(note)}><img src=\"/img/favorite.svg\"></img></a>\r\n                                <a className=\"delete\" onClick={() => this.deleteTodoItem(note._id)}><img src=\"/img/close.svg\"></img></a> \r\n                                <a className=\"handle\" onClick={() => this.handleTodoItem(note._id)}><img src=\"/img/handle.svg\"></img></a> \r\n                            </div> \r\n                            <div className={this.state.categoryModalOpen == true ? 'changeSection modal open' : 'changeSection modal'} id={note._id}>\r\n                                <a id=\"close\" onClick={this.closeCategoryDialog} className=\"close\"><img src=\"/img/close.svg\"></img></a>\r\n                                <h2>Change Section</h2>\r\n                                {this.props.sections.map(section => \r\n                                <div onClick={() => this.changeSectionInItem(note._id, section)}>{section}</div>\r\n                                )}\r\n                            </div>\r\n                        </div>  \r\n                    )}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n            <div className=\"todoItemWrapper\">\r\n                    <h2>Today</h2>\r\n                    <div className=\"sections\">\r\n                    <div className='sectionWrapper'>\r\n                            <span className=\"section\" onClick={() => this.chooseSection('all')}>All</span>\r\n                    </div>\r\n                        {this.props.sections.map(section =>          \r\n                                <div className={this.state.currentSection == section ? 'sectionWrapper current' : 'sectionWrapper'}>\r\n                                    <span className=\"section\" onClick={() => this.chooseSection(section)}>{section}</span>\r\n                                    <a><img onClick={() => this.deleteSection(section)} className=\"close\" src=\"/img/deleteCategory.svg\"></img></a>\r\n                                </div>\r\n                        )}\r\n                    </div>\r\n                    <a id=\"addSections\" onClick={this.openSectionDialog}>Add new sections</a>\r\n                    <div id=\"dynamicSection\" className={this.state.sectionDialogOpen == true ? 'dynamicSection open' : 'dynamicSection'}>\r\n                        <input id=\"sectionName\" type=\"text\" onChange={this.onChangeSection} placeholder=\"Add a new task category...\"></input>\r\n                        <a onClick={() => {\r\n                            this.createSection()\r\n                            this.closeSectionDialog()\r\n                        }}>Save and close</a>\r\n                    </div>\r\n                    {this.props.allNotes.filter(note => note.category == this.state.currentSection).map(note =>\r\n                        <div className={note.favorite == true ? 'todoItem favorite' : 'todoItem'} id={note._id}>\r\n                            <div className=\"wrapper\">\r\n                                <a className=\"done\" onClick={() => {\r\n                                    this.doneTodoItem(note)\r\n                                    this.localDoneTodoItem(note._id)\r\n                                    }}></a>\r\n                                <p className=\"todoItemContent\">{note.name}</p>\r\n                                <a className=\"edit\" onClick={() => this.openTodoItem(note._id)}>Edit</a>\r\n                            </div>\r\n                            <div className=\"actionArea\">\r\n                                <a className=\"favorite\" onClick={() => this.favoriteTodoItem(note)}><img src=\"/img/favorite.svg\"></img></a>\r\n                                <a className=\"delete\" onClick={() => this.deleteTodoItem(note._id)}><img src=\"/img/close.svg\"></img></a> \r\n                                <a className=\"handle\" onClick={() => this.handleTodoItem(note._id)}><img src=\"/img/handle.svg\"></img></a> \r\n                            </div> \r\n                            <div className={this.state.categoryModalOpen == true ? 'changeSection modal open' : 'changeSection modal'} id={note._id}>\r\n                                <h2>Change Section</h2>\r\n                                {this.props.sections.map(section => \r\n                                <div onClick={() => this.changeSectionInItem(note._id, section)}>{section}</div>\r\n                                )}\r\n                            </div>\r\n                        </div>  \r\n                    )}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default TodoItemWrapper","import React from 'react'\r\nimport axios from 'axios'\r\nimport TodoItemWrapper from './TodoItemWrapper.jsx'\r\nclass Content extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.createTodoItem = this.createTodoItem.bind(this)\r\n        this.changeTodoItemText = this.changeTodoItemText.bind(this)\r\n        this.fetchTodoItems = this.fetchTodoItems.bind(this)\r\n        this.fetchSections = this.fetchSections.bind(this)\r\n        \r\n        this.state = {\r\n            currentNote: '',\r\n            currentTodo: '',\r\n            notesInDB: [],\r\n            sectionsInDB: [],\r\n            userID: this.props.userID,\r\n            userEmail: this.props.userEmail\r\n        }\r\n    }\r\n\r\n    changeTodoItemText(e) {\r\n        this.setState({\r\n            currentNote: e.target.value\r\n        });\r\n    }\r\n\r\n    createTodoItem() {\r\n        const token = localStorage.getItem('user-token')\r\n        const todo = {\r\n            name: this.state.currentNote,\r\n            author: token\r\n        }\r\n        this.setState({\r\n            currentTodo: this.state.currentNote\r\n        })\r\n        axios.post('http://localhost:8000/api/todo/create', todo)\r\n            .then(this.fetchTodoItems())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    shouldComponentUpdate(nextState, nextProps) {\r\n        if (nextProps.author !== this.props.author) {\r\n            return true;\r\n        }\r\n        if (nextState.notesInDB !== this.state.notesInDB) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchTodoItems();\r\n        this.fetchSections();\r\n    }\r\n\r\n    fetchTodoItems() {\r\n        const token = localStorage.getItem('user-token')\r\n        const sendToken = {\r\n            token: token\r\n        }\r\n\r\n        axios.post('http://localhost:8000/api/todo/fetch', sendToken)\r\n            .then((res) => {\r\n                this.setState({\r\n                    notesInDB: res.data\r\n                });\r\n            })\r\n    }\r\n\r\n    fetchSections() {\r\n        const token = localStorage.getItem('user-token')\r\n        const sendToken = {\r\n            token: token\r\n        }\r\n        \r\n        axios.post('http://localhost:8000/api/sections/fetch', sendToken)\r\n            .then((res) => {\r\n                this.setState({\r\n                    sectionsInDB: res.data[0].sections\r\n                });\r\n            })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"itemForm\">\r\n                    <form id=\"form\">\r\n                        <div className=\"inputWrapper\">\r\n                            <p id=\"errorNotice\"></p>\r\n                            <input type=\"text\" id=\"box\" onChange={this.changeTodoItemText} placeholder=\"Add a task...\"></input>\r\n                            <a type=\"button\" id=\"submit\" value=\"Add to list\" onClick={this.createTodoItem}>Add to list</a>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <TodoItemWrapper fetchSections={this.fetchSections} sections = {this.state.sectionsInDB} fetchTodoItems={this.fetchTodoItems} author = {this.props.userID} allNotes = {this.state.notesInDB}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content","import React from 'react'\r\nimport axios from 'axios'\r\nimport Header from '../components/Header.jsx'\r\nimport Footer from '../components/Footer.jsx'\r\nimport Content from '../components/Content.jsx'\r\nimport SettingsModal from '../components/modals/SettingsModal.jsx'\r\nclass NotePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.fetchSettings = this.fetchSettings.bind(this)\r\n        this.state = {\r\n            userEmail: '',\r\n            userID: '',\r\n            color: '',\r\n            darkMode: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const token = localStorage.getItem('user-token')\r\n        const sendToken = {\r\n            token: token\r\n        }\r\n        axios.post('http://localhost:8000/api/users/currentUser', sendToken)\r\n            .then((resp) => {\r\n                this.setState({\r\n                    userEmail: resp.data.email,\r\n                    userID: resp.data._id\r\n                });\r\n            })\r\n        this.fetchSettings()\r\n    }\r\n\r\n    fetchSettings() {\r\n        console.log('WORKS?');\r\n        const token = localStorage.getItem('user-token')\r\n        const sendToken = {\r\n            token: token\r\n        }\r\n        axios.post('http://localhost:8000/api/settings/fetch', sendToken)\r\n            .then((resp) => {\r\n                this.setState({\r\n                    darkMode: resp.data.darkMode,\r\n                    color: resp.data.color\r\n                });\r\n            })\r\n            console.log(this.state.darkMode)\r\n            console.log(this.state.color)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n          <div className={this.state.darkMode == true ? 'dark' : 'light'} id={this.state.color}>\r\n              <Header fetchSettings={this.fetchSettings} darkMode={this.state.darkMode} color={this.state.color} />\r\n              <Content userID={this.state.userID} userEmail={this.state.userEmail} />\r\n              <Footer />\r\n          </div>  \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NotePage","import React from 'react';\r\nimport axios from 'axios'\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.tryLogin = this.tryLogin.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loggedIn: false\r\n        }\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n       });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    tryLogin(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post('http://localhost:8000/api/users/login', user)\r\n            .then((resp) => {\r\n                if (resp.data) {\r\n                    localStorage.setItem(\"user-token\", resp.data);\r\n                }\r\n            })\r\n\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    <p onClick={this.tryLogin} className=\"btn btn-primary dark-btn btn-block\">Login</p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LoginPage","import React from 'react';\r\nimport axios from 'axios'\r\nclass RegisterPage extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.tryLogin = this.tryLogin.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loggedIn: false\r\n        }\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n       });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    tryLogin(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post('http://localhost:8000/api/users/register', user)\r\n            .then((resp) => {\r\n                if (resp.data) {\r\n                    localStorage.setItem(\"user-token\", resp.data);\r\n                }\r\n            })\r\n\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n           \r\n            <div className=\"wrapper register content\">\r\n                \r\n                    <h1 className=\"text-center mb-3\">Register</h1>\r\n                    <h1>Login</h1>\r\n              <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChangePassword}\r\n                        />\r\n                    </div>\r\n                    <button onClick={this.tryLogin} type=\"submit\" className=\"btn btn-primary dark-btn btn-block\">Login</button>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default RegisterPage","import React from 'react';\r\nimport NotesPage from './pages/todo.jsx'\r\nimport LoginPage from './pages/login.jsx'\r\nimport RegisterPage from './pages/register.jsx'\r\nimport axios from 'axios'\r\n\r\nimport style from './css/style.css'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n\r\nclass App extends React.Component {\r\n  \r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      userIsAuthenticated: false\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const token = localStorage.getItem('user-token')\r\n    if (token) {\r\n      this.setState(\r\n        {\r\n          userIsAuthenticated: true\r\n        });\r\n      console.log('Okay this worked!');\r\n      axios.defaults.headers.common['x-auth-token'] = token\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.userIsAuthenticated) {\r\n      return (\r\n        <HashRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <NotesPage />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Redirect to='/' />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <Redirect to='/' />\r\n            </Route>\r\n          </Switch>\r\n        </HashRouter>\r\n      );\r\n    } else {\r\n      return (\r\n        <HashRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n            <Redirect to='/login'/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginPage />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <RegisterPage />\r\n            </Route>\r\n          </Switch>\r\n        </HashRouter>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}